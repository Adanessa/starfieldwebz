# Generated by Django 5.1a1 on 2024-06-15 14:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AidItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('mass', models.FloatField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aid_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllMissionboardMissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('system', models.TextField(blank=True, db_column='System', null=True)),
                ('location', models.TextField(blank=True, db_column='Location', null=True)),
                ('how_to_get', models.TextField(blank=True, db_column='How to Get', null=True)),
            ],
            options={
                'db_table': 'all_missionboard_missions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllPerkPrefixes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'all_perk_prefixes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllWeaponModPrefixes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('condition', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'all_weapon_mod_prefixes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllWeaponPerks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'all_weapon_perks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Apparel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('physical', models.TextField(blank=True, null=True)),
                ('energy', models.TextField(blank=True, null=True)),
                ('em', models.TextField(blank=True, null=True)),
                ('mods', models.TextField(blank=True, null=True)),
                ('how_to_obtain', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'apparel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArmorMods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
                ('materials', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'armor_mods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brands', models.TextField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('requires', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CargoHolds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('cargo', models.IntegerField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('cargo_mass_ratio', models.TextField(blank=True, null=True)),
                ('shielded', models.TextField(blank=True, null=True)),
                ('required', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cargo_holds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cockpits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('cargo', models.IntegerField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
                ('crew_stations', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('required', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cockpits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CookingStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
                ('materials', models.TextField(blank=True, null=True)),
                ('required_research', models.TextField(blank=True, null=True)),
                ('mass', models.FloatField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cooking_station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Engines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('class_field', models.TextField(blank=True, db_column='class', null=True)),
                ('max_power', models.IntegerField(blank=True, null=True)),
                ('engine_thrust', models.IntegerField(blank=True, null=True)),
                ('maneuvering_thrust', models.IntegerField(blank=True, null=True)),
                ('engine_health', models.IntegerField(blank=True, null=True)),
                ('crew_capacity', models.FloatField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('requires', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FuelTanks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('grav_jump_fuel', models.IntegerField(blank=True, null=True)),
                ('fuel_mass_ratio', models.FloatField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('requires', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fuel_tanks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GravDrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('class_field', models.TextField(blank=True, db_column='class', null=True)),
                ('max_power', models.IntegerField(blank=True, null=True)),
                ('grav_jump_thrust', models.IntegerField(blank=True, null=True)),
                ('grav_drive_health', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('requires', models.TextField(blank=True, null=True)),
                ('starship_design_rank', models.IntegerField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'grav_drives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Habs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('passenger_slots', models.IntegerField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('requires', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'habs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LandingGears',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('landing_thrust', models.IntegerField(blank=True, null=True)),
                ('hull', models.IntegerField(blank=True, null=True)),
                ('mass', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('requires', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'landing_gears',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PharmaceuticalLab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
                ('materials', models.TextField(blank=True, null=True)),
                ('required_research', models.TextField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pharmaceutical_lab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Planets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('gravity', models.CharField(blank=True, max_length=50, null=True)),
                ('temperature', models.CharField(blank=True, max_length=50, null=True)),
                ('atmosphere', models.CharField(blank=True, max_length=50, null=True)),
                ('magnetosphere', models.CharField(blank=True, max_length=50, null=True)),
                ('water', models.CharField(blank=True, max_length=50, null=True)),
                ('biomes', models.TextField(blank=True, null=True)),
                ('traits', models.TextField(blank=True, null=True)),
                ('fauna', models.TextField(blank=True, null=True)),
                ('flora', models.TextField(blank=True, null=True)),
                ('resources', models.TextField(blank=True, null=True)),
                ('planet_length', models.CharField(blank=True, max_length=50, null=True)),
                ('domesticable', models.TextField(blank=True, null=True)),
                ('hab_rank', models.TextField(blank=True, null=True)),
                ('gatherable', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Powers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('effect', models.TextField(blank=True, null=True)),
                ('cost', models.IntegerField(blank=True, null=True)),
                ('total', models.IntegerField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'powers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Systems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'systems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weapons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('rarity', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('dmg', models.TextField(blank=True, null=True)),
                ('ammo', models.TextField(blank=True, null=True)),
                ('mag', models.TextField(blank=True, null=True)),
                ('fire_rate', models.TextField(blank=True, null=True)),
                ('range', models.TextField(blank=True, null=True)),
                ('accuracy', models.TextField(blank=True, null=True)),
                ('mass', models.TextField(blank=True, null=True)),
                ('mod_capacity', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'weapons',
                'managed': False,
            },
        ),
    ]
